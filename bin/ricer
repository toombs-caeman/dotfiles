#!/usr/bin/env bash

# ricer         //
#      _______ //
#   __/  ,   ,//
#  / , ,   ,  , \
# \--------------/
#  \unununununun/
#   \__________/

theme_dir="${BASH_SOURCE%/*/*}/themes"
template_dir="${BASH_SOURCE%/*/*}/templates"
config() {
    echo "theme='$theme' wallpaper='$wallpaper'"
    # when      template        destination                         callback
    t xrdb      Xresources      ~/.Xresources                       xrdb -load ~/.Xresources
    t fc-list   fonts.conf      ~/.config/fontconfig/fonts.conf
    # libinput  libinput.conf   /etc/X11/xorg.conf.d/30-touchpad.conf
    t alacritty alacritty.yml   ~/.alacritty.yml
    t kitty     kitty.conf      ~/.config/kitty/kitty.conf
    t i3-msg    i3status.conf   ~/.config/i3status/config
    t i3-msg    i3config.sh     ~/.i3/config                        i3-msg restart >/dev/null
    t nvim      nvim.vim        ~/.config/nvim/init.vim
    t nvim      plug.vim        ~/.config/nvim/autoload/plug.vim    nvim +PlugInstall '+qall!'
    t nvim      colo.vim        ~/.local/share/nvim/plugged/dracula/autoload/dracula.vim
    t picom     picom.conf      ~/.config/picom.conf
    t mpd       mpd.conf        ~/.mpdconf  systemctl --user restart mpd.service
    t git       gitconfig       ~/.gitconfig
    # https://github.com/MrOtherGuy/firefox-csshacks/tree/master/chrome
    # firefox: enable toolkit.legacyUserProfileCustomizations.stylesheets
    : ~/.mozilla/firefox/*.default/chrome # expand glob pattern
    t firefox   userChrome.css   "$_/userChrome.css"
}
t() { command -v "$1" >/dev/null && mkdir -p "${3%/*}" && sed "$sed" <"$template_dir/$2" >"$3"&&(($#>3)) && "${@:4}"; }
ricer() {
    eval "`opt convert,c= theme,t= list fzf,f wallpaper,w= --nargs -d "paste color themes into templates."`"
    themes="$(
        cd "$theme_dir"
        for f in *; do 
            printf '%s\001\t' "${f##*/}"
            while read line; do
                : "${line#??}"
                printf '\e[0;38;2;%d;%d;%dmâ–ˆ' "0x${line%????}" "0x${_%??}" "0x${_#??}"
            done < "$f"
            printf '\e[m\n'
        done | column -t -s $'\t'
    )"

    # list themes and exit
    (( list )) && echo "$themes" && return

    # select theme
    [ -n "$convert" ] && theme=dracula # short circuit theme selection if we're converting a template
    if [ -n "$theme" ] || (( fzf )); then
        [ -f "$theme_dir/$theme" ] ||
        theme="$(echo "$themes" | fzf -1 -q "$theme" --ansi | cut -d $'\001' -f 1)"
    else
        theme="$(echo "$themes" | cut -d $'\001' -f 1 | shuf | head -n1)"
    fi
    [ -n "$theme" ] || return 1

    # load theme
    local sed='' des='' colors=() s='%ss,{{%s}},%s,g;' d='%ss,%s,{{%s}},gi;'
    while read line; do colors+=("$line"); done < "$theme_dir/$theme"
    local names=(color{0..15} foreground background cursor)
    for n in {0..18}; do
          printf -v sed "$s" "$sed" "${names[$n]}" "${colors[$n]}"
          printf -v des "$d" "$des" "${colors[$n]}" "${names[$n]}"
    done

    # convert dracula-themed file into template
    if [ -n "$convert" ]; then
        # 'Orange' is dracula's only standard color not represented in the ANSI palette. color9 is closest (but pinker)
        printf -v des "$d" "$des" "FFB86C" color9
        sed -i "$des" "$convert"
        return
    fi

    # select wallpaper
    [ -n "$wallpaper" ] || wallpaper="$(find ~/Pictures/Wallpapers -type f | shuf | head -n1)"
    [ ! -f "$wallpaper" ] && echo "wallpaper '$wallpaper' not found" >&2 && return 1
    printf -v sed "$s" "$sed" wallpaper "${wallpaper//,/\,}" # escape ',' for sed command

    config
}

# I copied almost all the themes in themes/
# convert from [pywal](https://github.com/dylanaraps/pywal)
# the ricer theme format is color 0 - 15, foreground, background, cursor using 6 digit hex codes. 1 color per line.
_ricer_load_pywal_themes() {
  for f in *.json; do
    jq "$(fmt 'color%s%F,%j(.colors|{%s}[]),(.special|{foreground,background,cursor}[])' {0..15})" "$f" | \
      tr -d '"#' > "${f%%.json}"
  done
  rm *.json
}
# https://github.com/studioThirteen/Terminal-Color-Schemes/tree/master/Xresources
_ricer_studiothirteen_xresource_themes() {
    for f in src/*; do
    { 
        echo '{'
        sed '/!/d;s/\*.\([^:]*\): *#\(.*\)/"\1":"\2",/;' "$f" | sed '$s/,//;'
        echo '}'
    } | jq -r "$(fmt '.%s%F,%j' color{0..15} foreground background cursorColor)" > dest/"${f#*/}"
    done
}

. "$(lib)" # import opt()
ricer "$@"

